<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cache on CDS - Continuous Delivery Service</title>
    <link>/docs/components/worker/cache/</link>
    <description>Recent content in cache on CDS - Continuous Delivery Service</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/docs/components/worker/cache/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>pull</title>
      <link>/docs/components/worker/cache/pull/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/worker/cache/pull/</guid>
      <description>worker cache pull worker cache pull tagValue
Synopsis Inside a project, you can fetch a cache from your worker with a tag
worker cache pull &amp;lt;tagValue&amp;gt;  If you push a cache with:
worker cache push latest {{.cds.workspace}}/pathToUpload  The command:
worker cache pull latest  will create the directory {{.cds.workspace}}/pathToUpload with the content of the cache
If you want to push a cache into a storage integration:
worker cache push latest --from=MyStorageIntegration {{.</description>
    </item>
    
    <item>
      <title>push</title>
      <link>/docs/components/worker/cache/push/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/worker/cache/push/</guid>
      <description>worker cache push worker cache push tagValue {{.cds.workspace}}/pathToUpload
Synopsis Inside a project, you can create a cache from your worker with a tag (useful for vendors for example) worker cache push dir/file
You can use you storage integration: worker cache push &amp;ndash;destination=MyStorageIntegration dir/file
worker cache push [flags] Examples worker cache push {{.cds.workflow}}-{{.cds.version}} ./pathToUpload Options  --destination string optional. Your storage integration name SEE ALSO  worker cache	-  </description>
    </item>
    
  </channel>
</rss>
